TCID,CaseTitle,Catalog,Priority,Variables,PreCondition,Role,ClientType,AuthSettings,Action,Parameter,ExpectResponseCode,ExpectResponseHeader,ExpectResponseBody,ExpectResponseBodySchema,PostValidation,Cleanup,Description,Comment
TestOthers#test07_test_list_parts#2,list parts of an initiated multipart upload object,list parts|UploadId,P0,"{'bucket_name': 'multipart-upload.%s'%random_bucket_name(),
'object_name':'upload-part.%s'%random_bucket_name(),
'body_content':'test'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200, 409]),
(""group1:user1"", ""S3CompatibleAPI"", ""create_multipart_upload"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""]}, [200])]",group1:user1,S3CompatibleAPI,,upload_part,"{""Bucket"":self.variables[""bucket_name""],""Key"":self.variables[""object_name""], ""PartNumber"":1, ""UploadId"":self.global_variables[self.variables[""object_name""]+""_upload_id""], ""Body"":self.variables[""body_content""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""list_parts"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""UploadId"":self.global_variables[self.variables[""object_name""]+""_upload_id""]}, [200], None, None, None, {'Bucket': self.variables['bucket_name'], 'Key': self.variables['object_name'], 'UploadId': self.global_variables[self.variables[""object_name""]+""_upload_id""], 'PartNumberMarker': 0, 'MaxParts': 1000, 'IsTruncated': False, 'Parts': [{'PartNumber': 1, 'LastModified': datetime.datetime, 'ETag': '""%s""' % calculate_md5('test'), 'Size': 4}], 'Initiator': {'ID': self.get_user_info(""group1:user1"").get(""user_id""), 'DisplayName': self.get_user_info('group1:user1').get('user_name')}, 'Owner': {'DisplayName': self.get_user_info('group1:user1').get('user_name'), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'StorageClass': 'STANDARD'})]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestOthers#test07_test_list_parts#3,list parts with MaxParts,list parts|MaxParts,P0,"{'bucket_name': 'multipart-upload.%s'%random_bucket_name(),
'object_name':'upload-part.%s'%random_bucket_name(),
'body_content':'test'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200, 409]),
(""group1:user1"", ""S3CompatibleAPI"", ""create_multipart_upload"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""]}, [200])]",group1:user1,S3CompatibleAPI,,upload_part,"{""Bucket"":self.variables[""bucket_name""],""Key"":self.variables[""object_name""], ""PartNumber"":1, ""UploadId"":self.global_variables[self.variables[""object_name""]+""_upload_id""], ""Body"":self.variables[""body_content""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""list_parts"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""UploadId"":self.global_variables[self.variables[""object_name""]+""_upload_id""], ""MaxParts"": ""0"" }, [200], None, None, None, {'Bucket': self.variables['bucket_name'], 'Key': self.variables['object_name'], 'UploadId': self.global_variables[self.variables[""object_name""]+""_upload_id""], 'PartNumberMarker': 0, 'MaxParts': 0, 'IsTruncated': True, 'Initiator': {'ID': self.get_user_info(""group1:user1"").get(""user_id""), 'DisplayName': self.get_user_info('group1:user1').get('user_name')}, 'Owner': {'DisplayName': self.get_user_info('group1:user1').get('user_name'), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'StorageClass': 'STANDARD'})]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestOthers#test07_test_list_parts#4,list parts with PartNumberMarker,list parts|PartNumberMarker,P0,"{'bucket_name': 'multipart-upload.%s'%random_bucket_name(),
'object_name':'upload-part.%s'%random_bucket_name(),
'body_content':'test'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200, 409]),
(""group1:user1"", ""S3CompatibleAPI"", ""create_multipart_upload"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""]}, [200])]",group1:user1,S3CompatibleAPI,,upload_part,"{""Bucket"":self.variables[""bucket_name""],""Key"":self.variables[""object_name""], ""PartNumber"":1, ""UploadId"":self.global_variables[self.variables[""object_name""]+""_upload_id""], ""Body"":self.variables[""body_content""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""upload_part"", {""Bucket"":self.variables[""bucket_name""],""Key"":self.variables[""object_name""], ""PartNumber"":2, ""UploadId"":self.global_variables[self.variables[""object_name""]+""_upload_id""], ""Body"":self.variables[""body_content""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""list_parts"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""UploadId"":self.global_variables[self.variables[""object_name""]+""_upload_id""], ""PartNumberMarker"": ""1""}, [200], None, None, None, {'Bucket': self.variables['bucket_name'], 'Key': self.variables['object_name'], 'UploadId': self.global_variables[self.variables[""object_name""]+""_upload_id""], 'PartNumberMarker': 1, 'MaxParts': 1000, 'IsTruncated': False, 'Parts': [{'PartNumber': 2, 'LastModified': datetime.datetime, 'ETag': '""%s""' %calculate_md5('test'), 'Size': 4}], 'Initiator': {'ID': self.get_user_info(""group1:user1"").get(""user_id""), 'DisplayName': self.get_user_info('group1:user1').get('user_name')}, 'Owner': {'DisplayName': self.get_user_info('group1:user1').get('user_name'), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'StorageClass': 'STANDARD'})]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestOthers#test07_test_list_parts#5,list parts|RequestPayer,list parts|RequestPayer,P0,"{'bucket_name': 'multipart-upload.%s'%random_bucket_name(),
'object_name':'upload-part.%s'%random_bucket_name(),
'body_content':'test'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200, 409]),
(""group1:user1"", ""S3CompatibleAPI"", ""create_multipart_upload"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""]}, [200])]",group1:user1,S3CompatibleAPI,,upload_part,"{""Bucket"":self.variables[""bucket_name""],""Key"":self.variables[""object_name""], ""PartNumber"":1, ""UploadId"":self.global_variables[self.variables[""object_name""]+""_upload_id""], ""Body"":self.variables[""body_content""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""list_parts"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""UploadId"":self.global_variables[self.variables[""object_name""]+""_upload_id""]}, [200], None, None, None, {'Bucket': self.variables['bucket_name'], 'Key': self.variables['object_name'], 'UploadId': self.global_variables[self.variables[""object_name""]+""_upload_id""], 'PartNumberMarker': 0, 'MaxParts': 1000, 'IsTruncated': False, 'Parts': [{'PartNumber': 1, 'LastModified': datetime.datetime, 'ETag': '""%s""' %calculate_md5('test'), 'Size': 4}], 'Initiator': {'ID': self.get_user_info(""group1:user1"").get(""user_id""), 'DisplayName': self.get_user_info('group1:user1').get('user_name')}, 'Owner': {'DisplayName': self.get_user_info('group1:user1').get('user_name'), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'StorageClass': 'STANDARD'})]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,Only supported by AWS