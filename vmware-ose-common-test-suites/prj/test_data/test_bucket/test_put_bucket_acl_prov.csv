TCID,CaseTitle,Catalog,Priority,Variables,PreCondition,Role,ClientType,AuthSettings,Action,Parameter,ExpectResponseCode,ExpectResponseHeader,ExpectResponseBody,ExpectResponseBodySchema,PostValidation,CleanUp,Description,Comment
TestBucket#test38_test_put_bucket_acl#2,put bucket acl to specific user(same tenant) with FULL_CONTROL permission by AccessControlPolicy body,put bucket acl|AccessControlPolicy|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,"[(""group1:user2"", ""S3CompatibleAPI"", ""put_bucket_acl"", {""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user2"", ""S3CompatibleAPI"", ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {""IsTruncated"": False, ""Contents"": [{""Key"": ""obj-group1-user1"", ""LastModified"": datetime.datetime, ""ETag"": '""%s""'%calculate_md5(""Test""), ""Size"": 4, ""StorageClass"": ""STANDARD""}], ""Name"": self.variables[""bucket_name""], 'Prefix': '', 'MaxKeys': 1000, 'KeyCount': 1}),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user2"", ""Body"":""Test""}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1""}, [204])]

","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#3,put bucket acl to specific user(same tenant) with READ permission by AccessControlPolicy body,put bucket acl|AccessControlPolicy|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""READ""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#4,put bucket acl to specific user(same tenant) with WRITE permission by AccessControlPolicy body,put bucket acl|AccessControlPolicy|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""WRITE""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#5,put bucket acl to specific user(same tenant) with READ_ACP permission by AccessControlPolicy body,put bucket acl|AccessControlPolicy|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""READ_ACP""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#6,put bucket acl to specific user(same tenant) with WRITE_ACP permission by AccessControlPolicy body,put bucket acl|AccessControlPolicy|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""WRITE_ACP""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#7,put bucket acl to specific user(different tenant) with FULL_CONTROL permission by AccessControlPolicy body,put bucket acl|AccessControlPolicy|ID|different tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group2:user1"").get(""user_name""), ""ID"":self.get_user_info(""group2:user1"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,"[(""group2:user1"", ""S3CompatibleAPI"", ""put_bucket_acl"", {""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group2:user1"").get(""user_name""), ""ID"":self.get_user_info(""group2:user1"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group2:user1"").get(""user_name""), 'ID': self.get_user_info(""group2:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': 'Foreign User (%s)'% self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group2:user1"").get(""user_name""), 'ID': self.get_user_info(""group2:user1"").get(""canonical_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group2:user1"", ""S3CompatibleAPI"", ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {""IsTruncated"": False, ""Contents"": [{""Key"": ""obj-group1-user1"", ""LastModified"": datetime.datetime, ""ETag"": '""%s""'%calculate_md5(""Test""), ""Size"": 4, ""StorageClass"": ""STANDARD""}], ""Name"": self.variables[""bucket_name""], 'Prefix': '', 'MaxKeys': 1000, 'KeyCount': 1}),
(""group2:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user2"", ""Body"":""Test""}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1""}, [204])]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#8,put bucket acl to all user with full control permission by AccessControlPolicy body,put bucket acl|AccessControlPolicy|URI,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""URI"":""http://acs.amazonaws.com/groups/global/AllUsers"", ""Type"":""Group""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,"[(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""put_bucket_acl"", {""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""URI"":""http://acs.amazonaws.com/groups/global/AllUsers"", ""Type"":""Group""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Grants': [{'Grantee': {""URI"":""http://acs.amazonaws.com/groups/global/AllUsers""}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': 'Foreign User (%s)'% self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {""URI"":""http://acs.amazonaws.com/groups/global/AllUsers""}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {""IsTruncated"": False, ""Contents"": [{""Key"": ""obj-group1-user1"", ""LastModified"": datetime.datetime, ""ETag"": '""%s""'%calculate_md5(""Test""), ""Size"": 4, ""StorageClass"": ""STANDARD""}], ""Name"": self.variables[""bucket_name""], 'Prefix': '', 'MaxKeys': 1000, 'KeyCount': 1}),
(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user2"", ""Body"":""Test""}, [200]),
(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1""}, [204])]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#9,put bucket acl to authenticated user with full control permission by AccessControlPolicy body,put bucket acl|AccessControlPolicy|URI,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""URI"":""http://acs.amazonaws.com/groups/global/AuthenticatedUsers"", ""Type"":""Group""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,"[(""group2:user1"", ""S3CompatibleAPI"", ""put_bucket_acl"", {""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""URI"":""http://acs.amazonaws.com/groups/global/AuthenticatedUsers"", ""Type"":""Group""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Grants': [{'Grantee': {""URI"":""http://acs.amazonaws.com/groups/global/AuthenticatedUsers""}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': 'Foreign User (%s)'% self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {""URI"":""http://acs.amazonaws.com/groups/global/AuthenticatedUsers""}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group2:user1"", ""S3CompatibleAPI"", ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {""IsTruncated"": False, ""Contents"": [{""Key"": ""obj-group1-user1"", ""LastModified"": datetime.datetime, ""ETag"": '""%s""'%calculate_md5(""Test""), ""Size"": 4, ""StorageClass"": ""STANDARD""}], ""Name"": self.variables[""bucket_name""], 'Prefix': '', 'MaxKeys': 1000, 'KeyCount': 1}),
(""group2:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user2"", ""Body"":""Test""}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1""}, [204])]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#10,put bucket acl to specific user(same tenant) with full control permission in header,put bucket acl|GrantFullControl|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'GrantFullControl': ""id=%s""%self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,"[(""group1:user2"", ""S3CompatibleAPI"", ""put_bucket_acl"", {""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user2"", ""S3CompatibleAPI"", ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {""IsTruncated"": False, ""Contents"": [{""Key"": ""obj-group1-user1"", ""LastModified"": datetime.datetime, ""ETag"": '""%s""'%calculate_md5(""Test""), ""Size"": 4, ""StorageClass"": ""STANDARD""}], ""Name"": self.variables[""bucket_name""], 'Prefix': '', 'MaxKeys': 1000, 'KeyCount': 1}),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user2"", ""Body"":""Test""}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1""}, [204])]

","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#11,put bucket acl to specific user(same tenant) with read permission in header,put bucket acl|GrantRead|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'GrantRead': ""id=%s""%self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#12,put bucket acl to specific user(same tenant) with write permission in header,put bucket acl|GrantWrite|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'GrantWrite': ""id=%s""%self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#13,put bucket acl to specific user(same tenant) with read_acp permission in header,put bucket acl|GrantReadACP|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'GrantReadACP': ""id=%s""%self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#14,put bucket acl to specific user(same tenant) with write permission in header,put bucket acl|GrantWriteACP|ID|same tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'GrantWriteACP': ""id=%s""%self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#15,put bucket acl to specific user(different tenant) with full control permission in header,put bucket acl|GrantFullControl|ID|different tenant,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'GrantFullControl': ""id=%s""%self.get_user_info(""group2:user1"").get(""canonical_id"")}",200,,,,"[(""group2:user1"", ""S3CompatibleAPI"", ""put_bucket_acl"", {""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group2:user1"").get(""user_name""), ""ID"":self.get_user_info(""group2:user1"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group2:user1"").get(""user_name""), 'ID': self.get_user_info(""group2:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': 'Foreign User (%s)'% self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group2:user1"").get(""user_name""), 'ID': self.get_user_info(""group2:user1"").get(""canonical_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group2:user1"", ""S3CompatibleAPI"", ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {""IsTruncated"": False, ""Contents"": [{""Key"": ""obj-group1-user1"", ""LastModified"": datetime.datetime, ""ETag"": '""%s""'%calculate_md5(""Test""), ""Size"": 4, ""StorageClass"": ""STANDARD""}], ""Name"": self.variables[""bucket_name""], 'Prefix': '', 'MaxKeys': 1000, 'KeyCount': 1}),
(""group2:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user2"", ""Body"":""Test""}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1""}, [204])]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#16,put bucket acl to all user with full control permission by header,put bucket acl|GrantFullControl|URI,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'GrantFullControl': ""uri=http://acs.amazonaws.com/groups/global/AllUsers""}",200,,,,"[(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""put_bucket_acl"", {""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""URI"":""http://acs.amazonaws.com/groups/global/AllUsers"", ""Type"":""Group""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Grants': [{'Grantee': {""URI"":""http://acs.amazonaws.com/groups/global/AllUsers""}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': 'Foreign User (%s)'% self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {""URI"":""http://acs.amazonaws.com/groups/global/AllUsers""}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {""IsTruncated"": False, ""Contents"": [{""Key"": ""obj-group1-user1"", ""LastModified"": datetime.datetime, ""ETag"": '""%s""'%calculate_md5(""Test""), ""Size"": 4, ""StorageClass"": ""STANDARD""}], ""Name"": self.variables[""bucket_name""], 'Prefix': '', 'MaxKeys': 1000, 'KeyCount': 1}),
(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user2"", ""Body"":""Test""}, [200]),
(""group2:user1"", (""S3CompatibleAPI"",{""method"":""anonymous""}), ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1""}, [204])]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#17,put bucket acl to authenticated user with full control permission by header,put bucket acl|GrantFullControl|URI,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'GrantFullControl': ""uri=http://acs.amazonaws.com/groups/global/AuthenticatedUsers""}",200,,,,"[(""group2:user1"", ""S3CompatibleAPI"", ""put_bucket_acl"", {""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""URI"":""http://acs.amazonaws.com/groups/global/AuthenticatedUsers"", ""Type"":""Group""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Grants': [{'Grantee': {""URI"":""http://acs.amazonaws.com/groups/global/AuthenticatedUsers""}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': 'Foreign User (%s)'% self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""canonical_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user1"", ""S3CompatibleAPI"", ""get_bucket_acl"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {""URI"":""http://acs.amazonaws.com/groups/global/AuthenticatedUsers""}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group2:user1"", ""S3CompatibleAPI"", ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [200], None, None, None, {""IsTruncated"": False, ""Contents"": [{""Key"": ""obj-group1-user1"", ""LastModified"": datetime.datetime, ""ETag"": '""%s""'%calculate_md5(""Test""), ""Size"": 4, ""StorageClass"": ""STANDARD""}], ""Name"": self.variables[""bucket_name""], 'Prefix': '', 'MaxKeys': 1000, 'KeyCount': 1}),
(""group2:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user2"", ""Body"":""Test""}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1""}, [204])]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#18,put bucket acl by header(private),put bucket acl|Canned ACL|private,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'ACL': 'private'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#19,put bucket acl by header(public-read),put bucket acl|Canned ACL|public-read,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'ACL': 'public-read'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#20,put bucket acl by header(public-read-write),put bucket acl|Canned ACL|public-read-write,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'ACL': 'public-read-write'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#21,put bucket acl by header(authenticated-read),put bucket acl|Canned ACL|authenticated-read,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'ACL': 'authenticated-read'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#22,put bucket acl by header(log delivery write),put bucket acl|Canned ACL|logging log delivery write,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], 'ACL': 'log-delivery-write'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#23,put bucket acl with matched content md5,put bucket acl|ContentMD5,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}, 'ContentMD5':  calculate_content_md5('<AccessControlPolicy xmlns=""http://s3.amazonaws.com/doc/2006-03-01/""><AccessControlList><Grant><Grantee xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:type=""CanonicalUser""><DisplayName>%s</DisplayName><ID>%s</ID></Grantee><Permission>FULL_CONTROL</Permission></Grant></AccessControlList><Owner><DisplayName>%s</DisplayName><ID>%s</ID></Owner></AccessControlPolicy>'%(self.get_user_info(""group1:user2"").get(""user_name""), self.get_user_info(""group1:user2"").get(""user_id""), self.get_user_info(""group1:user1"").get(""user_name""), self.get_user_info(""group1:user1"").get(""user_id"")))}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#24,put bucket acl with mismatched content md5,put bucket acl|ContentMD5,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{""Bucket"":self.variables[""bucket_name""], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}, 'ContentMD5':  calculate_content_md5('mismatched')}",400,,"{'Error': {'details': {'CalculatedDigest': calculate_content_md5('<AccessControlPolicy xmlns=""http://s3.amazonaws.com/doc/2006-03-01/""><AccessControlList><Grant><Grantee xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:type=""CanonicalUser""><DisplayName>%s</DisplayName><ID>%s</ID></Grantee><Permission>FULL_CONTROL</Permission></Grant></AccessControlList><Owner><DisplayName>%s</DisplayName><ID>%s</ID></Owner></AccessControlPolicy>'%(self.get_user_info(""group1:user2"").get(""user_name""), self.get_user_info(""group1:user2"").get(""user_id""), self.get_user_info(""group1:user1"").get(""user_name""), self.get_user_info(""group1:user1"").get(""user_id""))), 'ExpectedDigest': '%s'%calculate_content_md5('mismatched')}, 'Status': '400', 'Code': 'BadDigest', 'Message': str, 'Resource': str}}",,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#25,Put bucket acl with not any ACL settings in both header and body,put bucket acl|Bucket,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': 'self.variables[""bucket_name""]'}",400,,"{'Error': {'Status': '400', 'Code': 'InvalidRequest', 'Message': str, 'Resource': str}}",,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#26,put bucket acl to GrantWrite and GrantReadACP to LogDelivery,put bucket acl|GrantFullControl|URI,P0,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], ""GrantWrite"":""uri=\""http://acs.amazonaws.com/groups/s3/LogDelivery\"""", ""GrantReadACP"":""uri=\""http://acs.amazonaws.com/groups/s3/LogDelivery\""""}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestBucket#test38_test_put_bucket_acl#27,put bucket acl to GrantWrite and GrantReadACP to LogDelivery,put bucket acl|GrantFullControl|URI,P1,"{""bucket_name"": ""bkt-acl.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":""obj-group1-user1"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,put_bucket_acl,"{'Bucket': self.variables[""bucket_name""], ""GrantWrite"":""URI=\""http://acs.amazonaws.com/groups/s3/LogDelivery\"""", ""GrantReadACP"":""URI=\""http://acs.amazonaws.com/groups/s3/LogDelivery\""""}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,