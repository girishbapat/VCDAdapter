TCID,CaseTitle,Catalog,Priority,Variables,PreCondition,Role,ClientType,AuthSettings,Action,Parameter,ExpectResponseCode,ExpectResponseHeader,ExpectResponseBody,ExpectResponseBodySchema,PostValidation,Cleanup,Description,Comment
TestBucket#test01_test_create_bucket#2,create bucket with ObjectLockEnabledForBucket = True,create_bucket|ObjectLockEnabledForBucket,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'ObjectLockEnabledForBucket': True}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket with ObjectLockEnabledForBucket = True,
TestBucket#test01_test_create_bucket#3,create bucket with ObjectLockEnabledForBucket = False,create_bucket|ObjectLockEnabledForBucket,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'ObjectLockEnabledForBucket': False}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket with ObjectLockEnabledForBucket = False,
TestBucket#test01_test_create_bucket#4,create bucket with valid name,create_bucket|Bucket,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket with valid name,
TestBucket#test01_test_create_bucket#5,create bucket and grant bucket full control permission to specific user in header,create_bucket|GrantFullControl,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'GrantFullControl': 'id=%s'%self.get_user_info('group1:user2').get('canonical_id')}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket and grant bucket full control permission to specific user in header,
TestBucket#test01_test_create_bucket#6,create bucket and grant bucket write permission to specific user in header,create_bucket|GrantWrite,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'GrantWrite': 'id=%s'%self.get_user_info('group1:user2').get('canonical_id')}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket and grant bucket write permission to specific user in header,
TestBucket#test01_test_create_bucket#7,create bucket and grant bucket read_acp permission to specific user in header,create_bucket|GrantReadACP,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'GrantReadACP': 'id=%s'%self.get_user_info('group1:user2').get('canonical_id')}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket and grant bucket read_acp permission to specific user in header,
TestBucket#test01_test_create_bucket#8,create bucket and grant bucket read permission to specific user in header,create_bucket|GrantRead,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'GrantRead': 'id=%s'%self.get_user_info('group1:user2').get('canonical_id')}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket and grant bucket read permission to specific user in header,
TestBucket#test01_test_create_bucket#9,create bucket and grant bucket write_acp permission to specific user in header,create_bucket|GrantWriteACP,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'GrantWriteACP': 'id=%s'%self.get_user_info('group1:user2').get('canonical_id')}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket and grant bucket write_acp permission to specific user in header,
TestBucket#test01_test_create_bucket#10,create bucket with bucket configuration(LocationConstraint: EU),create_bucket|CreateBucketConfiguration,P1,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'CreateBucketConfiguration': {'LocationConstraint': self.cfg_profile.get('location_constraint')}}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket with bucket configuration(LocationConstraint: EU),
TestBucket#test01_test_create_bucket#11,create bucket with canned acl(private),create_bucket|ACL,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'ACL': 'private'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket with canned acl(private),
TestBucket#test01_test_create_bucket#12,create bucket with canned acl(public-read),create_bucket|ACL,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'ACL': 'public-read'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket with canned acl(public-read),
TestBucket#test01_test_create_bucket#13,create bucket with canned acl(public-read-write),create_bucket|ACL,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'ACL': 'public-read-write'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket with canned acl(public-read-write),
TestBucket#test01_test_create_bucket#14,create bucket with canned acl(authenticated-read),create_bucket|ACL,P0,{'bucket_name': random_bucket_name()},,group1:user1,S3CompatibleAPI,,create_bucket,"{'Bucket': self.variables[""bucket_name""], 'ACL': 'authenticated-read'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",create bucket with canned acl(authenticated-read),