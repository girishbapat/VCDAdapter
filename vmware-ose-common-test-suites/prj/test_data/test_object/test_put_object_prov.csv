TCID,CaseTitle,Catalog,Priority,Variables,PreCondition,Role,ClientType,AuthSettings,Action,Parameter,ExpectResponseCode,ExpectResponseHeader,ExpectResponseBody,ExpectResponseBodySchema,PostValidation,Cleanup,Description,Comment
TestObject#test19_test_put_object#2,put object to own bucket,put_object|Body,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'Body': 'test1'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#3,put object to a nonexistent bucket,put_object|Body,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}",,group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'Body': 'test2'}",404,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#4,put object without body,put_object|Body,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#5,put object with empyt key,put_object|Key,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ''}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#6,put object with StorageClass,put_object|StorageClass,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'StorageClass': 'STANDARD'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#7,put object with ACL: private,put_object|Canned ACL|private,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(),'acl':'private'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', ""ACL"":self.variables[""acl""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#8,put object with ACL: public-read,put_object|Canned ACL|public-read,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(),'acl':'public-read'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', ""ACL"":self.variables[""acl""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#9,put object with ACL: public-read-write,put_object|Canned ACL|public-read-write,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(),'acl':'public-read-write'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', ""ACL"":self.variables[""acl""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#10,put object with ACL: authenticated-read,put_object|Canned ACL|authenticated-read,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(),'acl':'authenticated-read'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', ""ACL"":self.variables[""acl""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#11,put object with ACL: bucket-owner-read,put_object|Canned ACL|bucket-owner-read,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(),'acl':'bucket-owner-read'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', ""ACL"":self.variables[""acl""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#12,put object with ACL: bucket-owner-full-control,put_object|Canned ACL|bucket-owner-full-control,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(),'acl':'bucket-owner-full-control'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', ""ACL"":self.variables[""acl""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#13,put object|GrantFullControl,put_object|ACL|GrantFullControl,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'GrantFullControl': ""id=\""%s\"""" % self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#14,put object|GrantReadACP,put_object|ACL|GrantReadACP,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'GrantReadACP': ""id=\""%s\"""" % self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#15,put object|GrantRead,put_object|ACL|GrantRead,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'GrantRead': ""id=\""%s\"""" % self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#16,put object|GrantWriteACP,put_object|ACL|GrantWriteACP,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'GrantWriteACP': ""id=\""%s\"""" % self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#17,put object with correct ContentMD5,put_object|ContentMD5,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1',  'Body': 'test1','ContentMD5': '%s'%calculate_content_md5('test1')}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#18,put object with incorrect ContentMD5,put_object|ContentMD5,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1',  'Body': 'test1','ContentMD5': '%s'%calculate_content_md5('wrong body')}",400,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#19,put object with ContentType,put_object|ContentType,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(),""content_type"":""text/plain;charset=utf-8""}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ContentType': self.variables[""content_type""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#20,put object with Tagging,put_object|Tagging,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'Tagging':""k2=v2""}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#21,put object with Metadata,put_object|Metadata,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'Metadata': {""k1"":""v1""}}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#22,put object|ContentDisposition,put_object|ContentDisposition,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(),""content_disposition"":'TODO'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ContentDisposition': self.variables[""content_disposition""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#23,put object with ObjectLockMode and ObjectLockRetainUntilDate,put_object|ObjectLockMode,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ObjectLockMode': 'GOVERNANCE','ObjectLockRetainUntilDate': 'Thu, 30 Aug 2020 12:04:10 GMT'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#24,put object|ContentLanguage,put_object|ContentLanguage,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ContentLanguage': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#25,put object|ContentEncoding,put_object|ContentEncoding,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ContentEncoding': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#26,put object|SSEKMSKeyId,put_object|SSEKMSKeyId,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'SSEKMSKeyId': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#27,put object|ObjectLockRetainUntilDate,put_object|ObjectLockRetainUntilDate,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ObjectLockRetainUntilDate': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#28,put object|CacheControl,put_object|CacheControl,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'CacheControl': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#29,put object|ContentLength,put_object|ContentLength,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ContentLength': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#30,put object|SSECustomerAlgorithm,put_object|SSECustomerAlgorithm,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'SSECustomerAlgorithm': 'ASE256'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#31,put object|WebsiteRedirectLocation,put_object|WebsiteRedirectLocation,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'WebsiteRedirectLocation': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#32,put object|SSECustomerKey,put_object|SSECustomerKey,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'SSECustomerKey': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#33,put object|ObjectLockLegalHoldStatus,put_object|ObjectLockLegalHoldStatus,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ObjectLockLegalHoldStatus': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#34,put object|SSECustomerKeyMD5,put_object|SSECustomerKeyMD5,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'SSECustomerKeyMD5': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#35,put object|ServerSideEncryption,put_object|ServerSideEncryption,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ServerSideEncryption': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#36,put object|Expires,put_object|Expires,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'Expires': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#37,put object|RequestPayer,put_object|RequestPayer,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'RequestPayer': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#38,put object to own bucket - path obj,put_object|Folder|Body,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/',}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'Body': 'test1'}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#39,put object to own bucket - path obj,put_object|Folder|Body,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/',}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'Body': 'test1'}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2""]}, [204]), (""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#40,put object to a nonexistent bucket - path obj,put_object|Folder|Body,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/',}",,group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'Body': 'test1'}",404,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#41,put object without body - path obj,put_object|Folder|Body,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/',}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'Body': 'test1'}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200]), (""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2""]}, [404]), (""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2""]}, [200]), (""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2""]}, [200])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#42,put object without body - path obj,put_object|Folder|Body,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'Body': 'test1'}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200]), (""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2""]}, [404]), (""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2""]}, [200]), (""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2""]}, [200]),(""group1:user1"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2-obj""]}, [204]), (""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2""]}, [200]), (""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s""%self.variables[""folder2-obj""]}, [404])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#43,put object with empty obj name - path obj,put_object|Folder,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s ""%(self.variables[""folder2""]), 'Body': 'test1'}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s ""%(self.variables[""folder2""])}, [200])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#44,"put object with extream folder - path obj - Folder is extreme deep (path obj len, 1024)",put_object|Folder,P1,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2', 
'path_obj': self.generate_object_name(path_obj=True)}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': self.variables['path_obj'], 'Body': 'test1'}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""path_obj""]}, [200, 400])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#45,put object with extream folder - path obj - Key is extreme long (1024),put_object|Folder,P1,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2', 
'path_obj': self.generate_object_name(length=1024)}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': self.variables['path_obj'], 'Body': 'test1'}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""path_obj""]}, [200, 400])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#46,put object with StorageClass - path obj,put_object|Folder|StorageClass,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2', 'storage_class':'STANDARD'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'Body': 'test1', 'StorageClass': 'STANDARD'}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200, 400])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#47,put object with ACL: private - path obj,put_object|Folder|Canned ACL|private,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2','acl':'private'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), ""ACL"":self.variables[""acl""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#48,put object with ACL: public-read - path obj,put_object|Folder|Canned ACL|public-read,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2', 'acl':'public-read'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), ""ACL"":self.variables[""acl""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, ""http://acs.amazonaws.com/groups/global/AllUsers"", {""schema"": ""contains""})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#49,put object with ACL: public-read-write - path obj,put_object|Folder|Canned ACL|public-read-write,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2','acl':'public-read-write'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), ""ACL"":self.variables[""acl""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, ""http://acs.amazonaws.com/groups/global/AllUsers"", {""schema"": ""contains""})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#50,put object with ACL: authenticated-read - path obj,put_object|Folder|Canned ACL|authenticated-read,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2','acl':'authenticated-read'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), ""ACL"":self.variables[""acl""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, ""http://acs.amazonaws.com/groups/global/AuthenticatedUsers"", {""schema"": ""contains""})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#51,put object with ACL: bucket-owner-read - path obj,put_object|Folder|Canned ACL|bucket-owner-read,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2','acl':'bucket-owner-read'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), ""ACL"":self.variables[""acl""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#52,put object with ACL: bucket-owner-full-control - path obj,put_object|Folder|Canned ACL|bucket-owner-full-control,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2','acl':'bucket-owner-full-control'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), ""ACL"":self.variables[""acl""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#53,put object|GrantFullControl - path obj,put_object|Folder|ACL|GrantFullControl,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'GrantFullControl': ""id=\""%s\"""" % self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, self.get_user_info(""group1:user2"").get(""user_name""), {""schema"": ""contains""})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#54,put object|GrantReadACP - path obj,put_object|Folder|ACL|GrantReadACP,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'GrantReadACP': ""id=\""%s\"""" % self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, self.get_user_info(""group1:user2"").get(""user_name""), {""schema"": ""contains""})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#55,put object|GrantRead - path obj,put_object|Folder|ACL|GrantRead,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'GrantRead': ""id=\""%s\"""" % self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, self.get_user_info(""group1:user2"").get(""user_name""), {""schema"": ""contains""})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#56,put object|GrantWriteACP - path obj,put_object|Folder|ACL|GrantWriteACP,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'GrantWriteACP': ""id=\""%s\"""" % self.get_user_info(""group1:user2"").get(""canonical_id"")}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, self.get_user_info(""group1:user2"").get(""user_name""), {""schema"": ""contains""})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#57,put object with correct ContentMD5 - path obj,put_object|Folder|ContentMD5,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]),  'Body': 'test1','ContentMD5': '%s'%calculate_content_md5('test1')}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#58,put object with incorrect ContentMD5 - path obj,put_object|Folder|ContentMD5,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]),  'Body': 'test1','ContentMD5': '%s'%calculate_content_md5('wrong body')}",400,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [404])]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#59,put object with ContentType - path obj,put_object|Folder|ContentType,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2',""content_type"":""text/plain;charset=utf-8""}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'ContentType': self.variables[""content_type""]}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, ""text/plain;charset=utf-8"", {""schema"": ""contains""})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#60,put object with Tagging - path obj,put_object|Folder|Tagging,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'Tagging':""k2=v2""}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, {'TagCount': 1}, {""schema"":{""match"":""partial""}})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#61,put object with Metadata - path obj,put_object|Folder|Metadata,P0,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'Metadata': {""k1"":""v1""}}",200,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""])}, [200], None, None, None, {'Metadata': {'k1': 'v1'}}, {""schema"":{""match"":""partial""}})]","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#62,put object|ContentDisposition - path obj,put_object|Folder|ContentDisposition,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2',""content_disposition"":'TODO'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'ContentDisposition': self.variables[""content_disposition""]}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#63,put object with ObjectLockMode and ObjectLockRetainUntilDate - path obj,put_object|Folder|ObjectLockMode,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'ObjectLockMode': 'GOVERNANCE','ObjectLockRetainUntilDate': 'Thu, 30 Aug 2020 12:04:10 GMT'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#64,put object|ContentLanguage - path obj,put_object|Folder|ContentLanguage,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'ContentLanguage': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#65,put object|ContentEncoding - path obj,put_object|Folder|ContentEncoding,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'ContentEncoding': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#66,put object|SSEKMSKeyId - path obj,put_object|Folder|SSEKMSKeyId,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'SSEKMSKeyId': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#67,put object|ObjectLockRetainUntilDate - path obj,put_object|Folder|ObjectLockRetainUntilDate,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'ObjectLockRetainUntilDate': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#68,put object|CacheControl - path obj,put_object|Folder|CacheControl,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': ""%s%s""%(self.variables[""folder2""], self.variables[""object_name2""]), 'CacheControl': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#69,put object|ContentLength - path obj,put_object|Folder|ContentLength,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ContentLength': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#70,put object|SSECustomerAlgorithm - path obj,put_object|Folder|SSECustomerAlgorithm,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'SSECustomerAlgorithm': 'ASE256'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#71,put object|WebsiteRedirectLocation - path obj,put_object|Folder|WebsiteRedirectLocation,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'WebsiteRedirectLocation': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#72,put object|SSECustomerKey - path obj,put_object|Folder|SSECustomerKey,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'SSECustomerKey': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#73,put object|ObjectLockLegalHoldStatus - path obj,put_object|Folder|ObjectLockLegalHoldStatus,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ObjectLockLegalHoldStatus': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#74,put object|SSECustomerKeyMD5 - path obj,put_object|Folder|SSECustomerKeyMD5,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'SSECustomerKeyMD5': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#75,put object|ServerSideEncryption - path obj,put_object|Folder|ServerSideEncryption,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'ServerSideEncryption': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#76,put object|Expires - path obj,put_object|Folder|Expires,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'Expires': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test19_test_put_object#77,put object|RequestPayer - path obj,put_object|Folder|RequestPayer,P3,"{'bucket_name': ""bkt-default.%s""%random_bucket_name(), 
'object_name1':'obj1',
'folder1':'sub1/',
'object_name2':'obj2', 'folder2':'sub1/sub2/', 'folder2-obj':'sub1/sub2'}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200])]",group1:user1,S3CompatibleAPI,,put_object,"{'Bucket': self.variables[""bucket_name""], 'Key': 'test-obj-1', 'RequestPayer': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [204, 404])]",,