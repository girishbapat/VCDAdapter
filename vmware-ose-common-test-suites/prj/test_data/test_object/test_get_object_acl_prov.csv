TCID,CaseTitle,Catalog,Priority,Variables,PreCondition,Role,ClientType,AuthSettings,Action,Parameter,ExpectResponseCode,ExpectResponseHeader,ExpectResponseBody,ExpectResponseBodySchema,PostValidation,Cleanup,Description,Comment
TestObject#test05_test_get_object_acl#2,get object acl of own object,get bucket acl|Key,P0,"{""bucket_name"": ""obj-acl.%s""%random_bucket_name(),
""object_name_g1u1"": ""obj-group1-user1""}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":self.variables[""object_name_g1u1""], ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,get_object_acl,"{""Bucket"":self.variables[""bucket_name""], ""Key"": self.variables[""object_name_g1u1""]}",200,,"{'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}",,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test05_test_get_object_acl#3,get object acl of shared object(same tenant) with read_acp permission ,get bucket acl|Key,P0,"{""bucket_name"": ""obj-acl.%s""%random_bucket_name(),
""object_name_g1u1"": ""obj-group1-user1""}","[(""group1:user2"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":self.variables[""object_name_g1u1""], ""Body"":""Test""}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object_acl"", {""Bucket"":self.variables[""bucket_name""], ""Key"":self.variables[""object_name_g1u1""],  ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""READ_ACP""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id"")}}}, [200])]",group1:user1,S3CompatibleAPI,,get_object_acl,"{""Bucket"":self.variables[""bucket_name""], ""Key"": self.variables[""object_name_g1u1""]}",200,,"{'Owner': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'READ_ACP'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}",,,"[(""group1:user2"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test05_test_get_object_acl#4,get object acl of shared object(same tenant) without read_acp permission ,get bucket acl|Key,P0,"{""bucket_name"": ""obj-acl.%s""%random_bucket_name(),
""object_name_g1u1"": ""obj-group1-user1""}","[(""group1:user2"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":self.variables[""object_name_g1u1""], ""Body"":""Test""}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object_acl"", {""Bucket"":self.variables[""bucket_name""], ""Key"":self.variables[""object_name_g1u1""],  ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""READ""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id"")}}}, [200])]",group1:user1,S3CompatibleAPI,,get_object_acl,"{""Bucket"":self.variables[""bucket_name""], ""Key"": self.variables[""object_name_g1u1""]}",403,,"{'Error': {'Status': '403', 'Code': 'AccessDenied', 'Message': str, 'Resource': str}}",,,"[(""group1:user2"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test05_test_get_object_acl#5,get object acl of shared object(different tenant) with read_acp permission ,get bucket acl|Key,P0,"{""bucket_name"": ""obj-acl.%s""%random_bucket_name(),
""object_name_g1u1"": ""obj-group1-user1""}","[(""group2:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":self.variables[""object_name_g1u1""], ""Body"":""Test""}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""put_object_acl"", {""Bucket"":self.variables[""bucket_name""], ""Key"":self.variables[""object_name_g1u1""],  ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""READ_ACP""}], ""Owner"":{""DisplayName"":self.get_user_info(""group2:user1"").get(""user_name""), ""ID"":self.get_user_info(""group2:user1"").get(""user_id"")}}}, [200])]",group1:user1,S3CompatibleAPI,,get_object_acl,"{""Bucket"":self.variables[""bucket_name""], ""Key"": self.variables[""object_name_g1u1""]}",200,,"{'Owner': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group2:user1"").get(""user_name""), 'ID': self.get_user_info(""group2:user1"").get(""canonical_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'READ_ACP'}, {'Grantee': {'DisplayName': 'Foreign User (%s)'%self.get_user_info(""group2:user1"").get(""user_name""), 'ID': self.get_user_info(""group2:user1"").get(""canonical_id"")}, 'Permission': 'FULL_CONTROL'}]}",,,"[(""group2:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,Bug 4503
TestObject#test05_test_get_object_acl#6,get object acl of shared object(different tenant) without read_acp permission ,get bucket acl|Key,P0,"{""bucket_name"": ""obj-acl.%s""%random_bucket_name(),
""object_name_g1u1"": ""obj-group1-user1""}","[(""group2:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"":self.variables[""object_name_g1u1""], ""Body"":""Test""}, [200]),
(""group2:user1"", ""S3CompatibleAPI"", ""put_object_acl"", {""Bucket"":self.variables[""bucket_name""], ""Key"":self.variables[""object_name_g1u1""],  ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""READ""}], ""Owner"":{""DisplayName"":self.get_user_info(""group2:user1"").get(""user_name""), ""ID"":self.get_user_info(""group2:user1"").get(""user_id"")}}}, [200])]",group1:user1,S3CompatibleAPI,,get_object_acl,"{""Bucket"":self.variables[""bucket_name""], ""Key"": self.variables[""object_name_g1u1""]}",403,,"{'Error': {'Status': '403', 'Code': 'AccessDenied', 'Message': str, 'Resource': str}}",,,"[(""group2:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test05_test_get_object_acl#7,get object acl of shared current object versions (same tenant) ,get object acl|VersionId|same tenant,P0,"{""bucket_name"": ""obj-acl.%s""%random_bucket_name(),
""object_name"": ""obj-group1-user1%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200, 409]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_bucket_versioning"", {""Bucket"":self.variables[""bucket_name""],""VersioningConfiguration"":{""Status"":""Enabled""}}, [200]),
(""group1:user1"",""S3CompatibleAPI"",""put_object"",{""Bucket"":self.variables[""bucket_name""],""Key"":self.variables['object_name'],""Body"":""test-v1"",""ContentType"":'text/plain'},[200]),
(""group1:user1"",""S3CompatibleAPI"",""put_object"",{""Bucket"":self.variables[""bucket_name""],""Key"":self.variables['object_name'],""Body"":""test-v2"",""ContentType"":'text/plain'},[200]),
(""group1:user1"",""S3CompatibleAPI"",""list_object_versions"",{""Bucket"":self.variables[""bucket_name""]},[200])]",group1:user1,S3CompatibleAPI,,put_object_acl,"{""Bucket"":self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][0], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,"[(""group1:user2"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][0]}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][0]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object_acl"", {""Bucket"":self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][0], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][0]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user2"", ""S3CompatibleAPI"", ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [403]),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""Body"":""Test""}, [403]),
(""group1:user2"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][0]}, [403]),
(""group1:user2"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][1]}, [403])]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test05_test_get_object_acl#8,get object acl of shared previous object versions (same tenant) ,get object acl|VersionId|same tenant,P0,"{""bucket_name"": ""obj-acl.%s""%random_bucket_name(),
""object_name"": ""obj-group1-user1%s""%random_bucket_name()}","[(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":self.variables[""bucket_name""]}, [200, 409]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_bucket_versioning"", {""Bucket"":self.variables[""bucket_name""],""VersioningConfiguration"":{""Status"":""Enabled""}}, [200]),
(""group1:user1"",""S3CompatibleAPI"",""put_object"",{""Bucket"":self.variables[""bucket_name""],""Key"":self.variables['object_name'],""Body"":""test-v1"",""ContentType"":'text/plain'},[200]),
(""group1:user1"",""S3CompatibleAPI"",""put_object"",{""Bucket"":self.variables[""bucket_name""],""Key"":self.variables['object_name'],""Body"":""test-v2"",""ContentType"":'text/plain'},[200]),
(""group1:user1"",""S3CompatibleAPI"",""list_object_versions"",{""Bucket"":self.variables[""bucket_name""]},[200])]",group1:user1,S3CompatibleAPI,,put_object_acl,"{""Bucket"":self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][1], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}",200,,,,"[(""group1:user2"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][1]}, [200]),
(""group1:user2"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][1]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object_acl"", {""Bucket"":self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][1], ""AccessControlPolicy"":{""Grants"":[{""Grantee"":{""DisplayName"":self.get_user_info(""group1:user2"").get(""user_name""), ""ID"":self.get_user_info(""group1:user2"").get(""user_id""), ""Type"":""CanonicalUser""}, ""Permission"":""FULL_CONTROL""}], ""Owner"":{""DisplayName"":self.get_user_info(""group1:user1"").get(""user_name""), ""ID"":self.get_user_info(""group1:user1"").get(""user_id"")}}}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""get_object_acl"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][1]}, [200], None, None, None, {'Owner': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Grants': [{'Grantee': {'DisplayName': self.get_user_info(""group1:user2"").get(""user_name""), 'ID': self.get_user_info(""group1:user2"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}, {'Grantee': {'DisplayName': self.get_user_info(""group1:user1"").get(""user_name""), 'ID': self.get_user_info(""group1:user1"").get(""user_id"")}, 'Permission': 'FULL_CONTROL'}]}),
(""group1:user2"", ""S3CompatibleAPI"", ""list_objects_v2"", {""Bucket"": self.variables[""bucket_name""]}, [403]),
(""group1:user2"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""Body"":""Test""}, [403]),
(""group1:user2"", ""S3CompatibleAPI"", ""delete_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][1]}, [403]),
(""group1:user2"", ""S3CompatibleAPI"", ""get_object"", {""Bucket"": self.variables[""bucket_name""], ""Key"": self.variables[""object_name""], ""VersionId"": self.global_variables[self.variables['object_name']+'_versions_v1'][0]}, [403])]
","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"": self.variables[""bucket_name""]}, [204, 404])]",,
TestObject#test05_test_get_object_acl#9,get object acl|RequestPayer,get object acl|RequestPayer,P3,"{'bucket_name': '""bkt-default.%s""%timestamp(format=""%Y-%m-%dt%H-%M-%S.%fz"")'}","[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":""self.variables[""bucket_name""]""}, [204, 404]),
(""group1:user1"", ""S3CompatibleAPI"", ""create_bucket"", {""Bucket"":""self.variables[""bucket_name""]""}, [200]),
(""group1:user1"", ""S3CompatibleAPI"", ""put_object"", {""Bucket"":""self.variables[""bucket_name""]"", ""Key"":""obj-default"", ""Body"":""Test""}, [200])]",group1:user1,S3CompatibleAPI,,get_object_acl,"{'Bucket': 'self.variables[""bucket_name""]', 'Key': 'test-obj-1', 'RequestPayer': 'TODO'}",200,,,,,"[(""group1:user1"", ""S3CompatibleAPI"", ""force_delete_bucket"", {""Bucket"":""self.variables[""bucket_name""]""}, [204, 404])]",,Only supported by AWS